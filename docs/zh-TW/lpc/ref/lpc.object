
發信人: jinna@phoenix (吉娜), 信區: mud
標  題: LPC 物件超短篇

* 什麼是物件?

    一個物件包括函數(正式稱呼是"方法")跟那些函數要處理的資料(變數).
    處理資料的唯一途徑就是透過定義在該物件上的函數, 也就是說, 物件
    把處理資料的方法跟資料本身包裝起來.

    一個單一的物件在 mud 中獨立的, 也許是一個事件, 一個生物, 一個房間,
    一個武器, 一張紙等等. 甚至你自己就是一個物件, 只是在 mud 裡稱之為
    "動作"物件, 也就是可以下命令(產生動作)的物件, 用來跟其他物件有所區
    別, 這跟不是玩家控制的生物不一樣. 每個物件都是一個用 LPC 寫成的檔
    案, 該檔描述了該如何讓驅動程式溝通, 也描述了在 mud 的作用.

    物件在整個泥巴中會占有記憶體, 至於所占的多寡則端視定義在該物件上的
    變數多寡, 以及函數等等因素而有不同. 通常驅動程式會在需要載入物件時
    才載入它, 沒用到時就不會載入, 而載入的時機則可能不一樣, 大致說來,
    當玩家 "碰" 到物件時就會載入, 有些是系統必要自動載入的. 至於記憶體
    的控制, 有各種選項讓發展程式的人設定, 通常都定義在 options.h 中,請
    自行參考該檔的說明.

    物件所占用的空間的釋放則可以由系統自動執行, 或由程式發展者控制. 對
    於自動部份, 驅動程式會定時呼叫定義在物件上的 clean_up() 函數, 當傳
    回 1 時就清除, 如果你有某些物件不想被清掉, 請自行定義此函數, 並適 
    當的傳回 0. 手動部份, 則可以由 destruct() 函數控制, 請自行研讀該函
    數的說明.

--
    本份文件由 wade@Fantasy.Space 提供
    本文件內容也許有錯漏的地方, 歡迎指正批評
    歡迎流通本文件

