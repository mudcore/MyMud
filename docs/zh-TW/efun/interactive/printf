名稱：
	printf - 轉換成指定格式的輸出結果。
語法：
	void printf( string format, ... );

	無傳回值 printf( 字串 格式, ... );
用法：
	輸出結果會送給 this_user()，與 write() 外部函式的作用一樣。
	本函式由 Sean A Reith 撰寫。

	目前的版本支援以下的修飾子 (modifier)：

	" "	在正整數之前放入一個空格。

	"+"	在正整數之前放入一個 + 號。

	"-"	對齊欄位 (field) 的左邊。

	請注意：系統內標準的 printf() 預設是對齊右邊，但是對主要以字串為基
	礎的語言來說，這樣非常不自然。在此為了相容性而保留此一特性。

	"|"	對齊欄位的中心。

	"="	如果字串長度比欄位大小還長，使用縱列模式 (column mode)。在
		此只對字串有效，其他的型態一律無效。縱列模式中，字串中的字
		會很神奇地自動自動換行 (wrap)。

	"#"	表格模式。在欄位之內，字串中的每一個字會換一行〈即每個字後
		面加上「\n」〉。只對字串有效。

	數字	用整數指定欄位大小。用「*」代替整數則使用參數指定欄位大小。
		如果數字是 0，則此欄除了資料以外就以空值 (zeros) 填滿。如果
		數字不是 0，此欄除了資料以外將放入空白字元 (space) 或是另外
		指定的字元。

	"."數字	指定輸出的精確度為該數字。普通的字串在此之後則被截斷〈如果
		精確度大於欄位長度，則欄位長度變為精確度〉。表格則使用精確
		度指定縱列的總數〈如果不指定精確度，則表格會自動計算最適合
		的輸出結果〉。精確度對於其他的資料型態無效。

	":"數字	數字指定 fs 和精確度，如果數字是 0，則原來用以填滿欄位的空
		格就代以空值 (zeros)。

	"@"	參數為一個陣列。其他除了 @ 以外，對應的格式資料亦將用於陣列
		中的每一個元素。

	"'X'"	單引號 (') 中的字元用以填滿整個欄位中資料以外的空間。〈預設
		值是空白字元〉〈如果同時在欄位大小之前指定一個空值，又指定 
		'X' 字串填滿欄位，則以後者為準〉注意：如果欲填滿的字串中要
		使用單引號 (')、雙引號 (") 或倒斜線 (\)，您必須使用「\'」、
		「\"」或「\\」以避開編譯器的檢查。

以下是型態指定子 (type specifier)：

	%	此處不指定任何參數，而以 % 輸出，忽略所有的修飾子。

	O	參數為 LPC 資料型態。此格式適合用來印出任何型態的資料〈主要
		用於除錯〉

	s	參數為字串。

	d 或 i	整數參數以十進位印出。

	c	整數參數以字元印出。

	o	整數參數以八進位印出。

	x	整數參數以十六進位印出。

	X	整數參數以十六進位印出〈A 到 F 以大寫印出〉。

	f	浮點數。

參考：
	sscanf, sprintf
作者：
	Tim Hollebeek  Beek@ZorkMUD, Lima Bean, IdeaExchange, and elsewhere
翻譯：
	spock@muds.net		2000.Jun.27.	v22 版
