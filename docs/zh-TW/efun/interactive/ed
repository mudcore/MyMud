名稱：
	ed - 編輯一個檔案。
語法：
	void ed( string file, string exit_fn, int restricted );
	void ed( string file, string write_fn, string exit_fn, int restricted );

	無傳回值 ed( 字串 file, 字串 exit_fn, 整數 restricted );
	無傳回值 ed( 字串 檔案, 字串 寫入函式, 字串 離開函式, 整數 限制 );
用法：
	這個函式只有在定義了 OLD_ED 之後有效。

	這是個有趣的函式。它會啟動一個內部的文書編輯程式來編輯一個指定的檔
	案。這個編輯程式與 UNIX 的 ed 程式幾乎相容。當你進入編輯程式後，可
	以輸入 h 閱讀說明。

	「write_fn」函式讓 mudlib 控制檔案的寫入保護和檔案的修改紀錄。當編
	輯程式寫入一個檔案時，驅動程式 (driver)	會呼叫 write_fn 兩次。第一
	次呼叫在寫入檔案之前── flag 旗標為 0。如果 write_fn 傳回 1，就繼
	續寫入檔案，傳回其他值則放棄寫入。第二次呼叫時，是在寫完檔案之後，
	此時的 flag 旗標為非零值。
	被呼叫的函式必須符合以下的格式：

	int write_fn( string fname, int flag )

	離開編輯程式時，驅動程式會呼叫「exit_fn」函式。此函式可以讓 mudlib 
	清除。這個函式要符合以下的格式：

	void exit_fn()

	而可以選擇的「restricted」旗標則限制編輯程式的功能。像是：插入一個
	檔案、以另一個名字儲存檔案。
參考：
	regexp, valid_read, valid_write, get_save_file_name
作者：
	Tim Hollebeek  Beek@ZorkMUD, Lima Bean, IdeaExchange, and elsewhere
翻譯：
	spock@muds.net		2000.Jun.25.	v22 版
