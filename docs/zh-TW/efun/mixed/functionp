名稱：
	functionp - 判斷指定的變數是否為一個函式指標 (function pointer)。
語法：
	int functionp( mixed arg );

	整數 functionp( 混合 參數 );
用法：
	如果「arg」是一個函式指標則傳回非零值 (nonzero)，不是則傳回 0。
	函式指標是一種「函式」(function) 型態的變數，在文件中有其說明。
	以下是範例：

	f = (: call_other, obj, func :);

	傳回值指示出函式指標的型態，而這些傳回值的意義定義在驅動程式的 
	「include/function.h」標頭檔中。

	FP_LOCAL      -	lfun pointer	〈區域函式指標〉
	FP_EFUN       -	efun pointer	〈外部函式指標〉
	FP_SIMUL      - simul pointer	〈模擬外部函式指標〉
	FP_FUNCTIONAL - functional	〈功能函式指標〉

	這些值是位元值 (bit value)；以下是可能同時加上的旗標：

	FP_HAS_ARGUMENTS	- 定義包括參數
	FP_OWNER_DESTED		- 本函式指標的擁有者已被摧毀
	FP_NOT_BINDABLE		- 本函式指標無法再次連結 (bind)

	測試一個函式指標變數是否為外部函式指標：

	if (functionp(f) & FP_EFUN) ...

	測試是否為外部函式或模擬外部函式：

	if (functionp(f) & (FP_EFUN | FP_SIMUL)) ...

	試著呼叫函式：

	if (functionp(f) & FP_OWNER_DESTED) {
		if (functionp(f) & FP_NOT_BINDABLE)
		error("函式無法再次連結。\n");
		f = bind(f, this_object());
	}
	evaluate(f);
作者：
	Tim Hollebeek  Beek@ZorkMUD, Lima Bean, IdeaExchange, and elsewhere
翻譯：
	spock@muds.net		2000.Aug.23.	v22 版
